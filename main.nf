// Create pseudoMS2 with DIAUmpire
// Searches with Comet and Tandem
// Pooled PeptideProphet for Comet and Tandem separately
// InterProphet on pooled PeptideProphets
// ProteinProphet on InterProphet
// Mayu on InterProphet
// Filter 1%FDR Peptide -> SpectraST


process diaUmpire {
    // Generate pseudoDDA files for each DIA file
    input:
    file dia_file from file("${params.dia_folder}/*.mzXML")
    file diau_se_params from file(params.diau_se_params)

    output:
    file '*.mgf' into diaUmpireOut
    
    """
    dia_umpire_se $dia_file $diau_se_params
    """
}


process mgf2mzxml {
    // Convert mgfs generated by DIAUmpire to mzXML
    publishDir 'Results/DIAUmpire'

    input:
    // For each DIA file DIA-Umpire will generate 3 pseudo mgf files
    file mgf_file from diaUmpireOut.flatten()

    output:
    file '*.mzXML' into pDdaFiles
    
    """
    msconvert $mgf_file --mzXML
    """
}


process cometSearch {
    // Search all mzXML files in $params.dda_folder and diaUmpire
    // extracted ones with Comet
    publishDir 'Results/Comet'
    
    input:
    file mzXML from Channel.fromPath("${params.dda_folder}/*.mzXML").concat(pDdaFiles)
    file comet_params from file(params.comet_params)
    file protein_db from file(params.protein_db)

    output:
    file '*.pep.xml' into cometOut
    file mzXML

    """
    comet $mzXML
    """
}


process pooledCometTpp {
    // Interact together all comet searches
    publishDir 'Results/Comet'
    
    input:
    file pepxmls from cometOut.collect()
    file protein_db from file(params.protein_db)

    output:
    file 'comet_merged.pep.xml' into tppPepOut
    file 'comet_merged.pep-MODELS.html'
    file 'comet_merged.pep.xml.index'
    file 'comet_merged.pep.xml.pIstats'

    // xinteract and refactor links in prot.xml 
    """
    xinteract $params.tpp -d$params.decoy -Ncomet_merged.pep.xml $pepxmls
    """
}


process interProphet {
    // Combine search engine results via InterProphet
    publishDir 'Results/SpectraST'
    
    input:
    file pepxmls from tppPepOut.collect()

    output:
    file 'iprophet.pep.xml' into interPepOut
    file 'iprophet.pep-MODELS.html'
    
    script:
    """
    InterProphetParser THREADS=8 $pepxmls iprophet.pep.xml
    tpp_models.pl iprophet.pep.xml
    """
}


interPepOut.into{interPepOut1; interPepOut2; interPepOut3; interPepOut4}


process proteinProphet {
    // Run ProteinProphet on combined search results
    publishDir 'Results/SpectraST'
    
    input:
    file pepxml from interPepOut1
    file protein_db from file(params.protein_db)

    output:
    file 'iprophet.prot-MODELS.html'
    file 'iprophet.prot.xml' into tppProtOut
    
    script:
    """
    ProteinProphet $pepxml iprophet.prot.xml IPROPHET
    tpp_models.pl iprophet.prot.xml
    sed -ri 's|/work/.{2}/.{30}|/Results/SpectraST|'g iprophet.prot.xml
    """
}


process mayu {
    // For each TPP analysis run Mayu
    publishDir 'Results/SpectraST'

    input:
    file pepxml from interPepOut2
    file db from file(params.protein_db)
    
    output:
    file 'mayu_iprophet.pep.xml_main_1.07.txt'
    file 'mayu_iprophet.pep.xml_main_1.07.csv' into mayuOut
    
    """
    Mayu.pl -A $pepxml \
    -C $db \
    -E $params.decoy \
    -M mayu_$pepxml \
    -P pepFDR=0.01:1
    """
}


process tppStat {
    // For each TPP analysis run calctppstat
    publishDir 'Results/SpectraST'
    
    input:
    file pepxml from interPepOut3
    file protxml from tppProtOut

    output:
    file '*.summary.txt'
    
    """
    /usr/local/tpp/cgi-bin/calctppstat.pl -i $pepxml -d $params.decoy --full > ${pepxml}.summary.txt
    """
}


process parseMayu {
    input:
    file mayu_csv from mayuOut

    output:
    stdout into parseMayuOut

    script:
    """
    parse_mayu.py $mayu_csv
    """
}


process spectraST {
    // Assemble consensus spectral library
    publishDir 'Results/SpectraST'
    
    input:
    file pepxml from interPepOut4
    val probability from parseMayuOut
    file irt from file(params.rt_file)

    output:
    file "SpecLib.splib"
    file "SpecLib.sptxt"
    file "SpecLib.pepidx"
    file "SpecLib_cons.splib"
    file "SpecLib_cons.sptxt"
    file "SpecLib_cons.pepidx"
    file "spectrast.log"
    
    script:
    """
    spectrast -cNSpecLib $params.st_fragmentation -cf'Protein!~$params.decoy' -cP$probability -c_IRT$irt -c_IRR $pepxml
    spectrast -cNSpecLib_cons $params.st_fragmentation -cAC SpecLib.splib
    """
}
